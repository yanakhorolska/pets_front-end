{"version":3,"file":"static/js/115.abde72b5.chunk.js","mappings":"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","sources":["components/OurFriensList/OurFriendsListStyled.js","components/OurFriendsItem/OurFriendsItemStyled.js","components/WorkTimePopUp/WorkTimePopUpStyled.js","components/WorkTimePopUp/WorkTimePopUp.jsx","components/OurFriendsItem/OurFriendsItem.jsx","components/OurFriensList/OurFriendsList.jsx","styles/Headers/Headers.styled.js","pages/OurFriendsPage/OurFriendsWrapStyled.js","pages/OurFriendsPage/OurFriendsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FriendsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 12px;\n  max-width: 500px;\n  margin: 0 auto;\n  list-style-type: none;\n\n  @media (min-width: 768px) {\n        justify-content: space-evenly\n    gap: 32px;\n    max-width: 100%;\n  }\n  @media (min-width: 1280px) {\n    display: grid;\n    gap: 32px;\n    grid-template-columns: 1fr 1fr 1fr;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const FriendsItem = styled.li`\n  min-height: 200px;\n  width: 80%;\n  text-align: center;\n  padding: 15px;\n  background-color: ${p => p.theme.color.white};\n  border-radius: 20px;\n  box-shadow: 7px 4px 14px rgba(49, 21, 4, 0.07);\n  flex-wrap: wrap;\n  @media (min-width: 768px) {\n    border-radius: 40px;\n    width: calc(40%);\n  }\n  @media (min-width: 1280px) {\n    height: 100%;\n    width: 100%;\n  } ;\n`;\n\nexport const ItemTitle = styled.a`\n  display: inline-block;\n  text-transform: uppercase;\n  width: 100%;\n  margin-bottom: 12px;\n  font-size: 12px;\n  line-height: 1.33;\n  font-weight: 700;\n  color: ${p => p.theme.color.accent};\n  &:hover {\n    color: ${p => p.theme.color.hoverBtn};\n  }\n  &:focus {\n    color: ${p => p.theme.color.hoverBtn};\n  }\n  text-align: center;\n  text-decoration: underline;\n  text-decoration-style: solid;\n  text-decoration-thickness: 1px;\n  @media (min-width: 768px) {\n    margin-bottom: 16px;\n    font-size: 16px;\n    line-height: 1.38;\n  }\n  @media (min-width: 1280px) {\n    font-size: 20px;\n    line-height: 1.35;\n  } ;\n`;\n\nexport const FriendsItemBox = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n`;\n\nexport const FriendsImgBox = styled.div`\n  width: 158px;\n`;\n\nexport const FriendsImage = styled.img`\n  border-radius: 20px;\n  display: block;\n  max-width: 100%;\n  width: 100%;\n`;\n\nexport const ContactsList = styled.div`\n  display: flex;\n  flex-flow: column wrap;\n  text-align: start;\n  margin-left: 10px;\n  gap: 5px;\n  text-decoration: none;\n  font-style: normal;\n  font-weight: 500;\n  word-break: break-all;\n  width: 55%;\n  font-size: 12px;\n  line-height: 1.33;\n  @media (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.36;\n  }\n  @media (min-width: 1280px) {\n    font-size: 16px;\n    line-height: 1.38;\n  }\n`;\n\nexport const ContactsWrap = styled.div`\n  display: block;\n  font-weight: 600;\n`;\n\nexport const ContactsLink = styled.a`\n  color: inherit;\n  &:hover {\n    color: ${p => p.theme.color.accent};\n  }\n  &:focus {\n    color: ${p => p.theme.color.accent};\n  }\n  text-decoration: underline;\n  text-decoration-style: solid;\n  text-decoration-thickness: 1px;\n`;\n\nexport const NoInfo = styled.span`\n  color: ${p => p.theme.color.greyText};\n`;\n","import { styled } from '@mui/material/styles';\nimport { Box } from '@mui/material';\nexport const PopoverAnchor = styled(Box)(() => ({\n  cursor: 'pointer',\n  '&:hover': {\n    color: '#F59256',\n  },\n}));\n\nexport const PopoverContainer = styled(Box)(() => ({\n  display: 'grid',\n  gridTemplateColumns: 'auto 1fr',\n  gridRowGap: '4px',\n  justifyItems: 'center',\n  gridColumnGap: '15px',\n  fontSize: '12px',\n  lineHeight: '1.33',\n  padding: '12px',\n  height: '100%',\n}));\n","import { Fragment, useState } from 'react';\nimport { Popover } from '@mui/material';\nimport { PopoverAnchor, PopoverContainer } from \"./WorkTimePopUpStyled\"\n\nexport const WorkTimePopUp = ({ workDays }) => {\n    const [anchorElement, setAnchorElement] = useState(null);\n\n    const handlePopoverOpen = ({ currentTarget }) => {\n        setAnchorElement(currentTarget);\n    };\n    \n    const handlePopoverClose = () => {\n    setAnchorElement(null);\n    };\n\n     const isPopupOpened = !!anchorElement;\n\n    const currentDate = new Date();\n  \n   \n    const indexToFind = currentDate.getDay() \n    const neededObj = workDays.find((obj, index) => index === indexToFind);\n\n  \n\n    return (\n        <PopoverAnchor  aria-owns={isPopupOpened ? 'popover' : undefined}\n      aria-haspopup=\"true\"\n      onMouseEnter={handlePopoverOpen}\n      onMouseLeave={handlePopoverClose}>\n            {workDays.length > 0 && <span key={neededObj._id}> {!neededObj.isOpen ? \"CLOSED\" : `${neededObj.from} - ${neededObj.to}`}</span>}\n            <Popover\n                id=\"popover\"\n                sx={{\n          pointerEvents: 'none',\n          backgroundColor: 'transparent',\n        }}\n          open={isPopupOpened}\n          anchorEl={anchorElement}\n          anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n                }}\n          transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n                }}\n                PaperProps={{\n          sx: {\n            backgroundColor: 'white',\n            borderWidth: '1px',\n            borderStyle: 'solid',\n            borderRadius: '8px',\n            borderColor: '#F59256',\n            boxShadow: 53,\n                  \n          },\n                }}\n                onClose={handlePopoverClose}\ndisableRestoreFocus\n            >\n                <PopoverContainer>\n                    {workDays.map((workDay, index) => {\nfunction getDayName(index) {\n  switch (index) {\n    case 0:\n      return \"SN\";\n    case 1:\n      return \"MN\";\n    case 2:\n      return \"TU\";\n    case 3:\n      return \"WD\";\n    case 4:\n      return \"TH\";\n    case 5:\n      return \"FR\";\n    case 6:\n      return \"ST\";\n    default:\n      return \"Invalid day\";\n  }\n}\n\n            return (\n              <Fragment key={workDay._id}>\n                <div>{getDayName(index)}</div>\n                <div>\n                  {workDay?.isOpen\n                    ? `${workDay?.from} - ${workDay?.to}`\n                    : 'CLOSED'}\n                </div>\n              </Fragment>\n            );\n          })}\n            </PopoverContainer>\n            </Popover> \n        </PopoverAnchor>      \n)\n    \n\n\n    // const currentDateString = new Date().toString().toLowerCase();\n    // const dayName = currentDateString.getDay()\n    \n    //  const todayWorkData = workDays.find(workDay =>\n    // currentDateString.startsWith(workDay._id.toLowerCase())\n    // );\n    \n    //     return (<PopoverAnchor\n    // //   aria-owns={isPopupOpened ? 'popover' : undefined}\n    // //   aria-haspopup=\"true\"\n    //   onMouseEnter={handlePopoverOpen}\n    //   onMouseLeave={handlePopoverClose}\n    //   component = \"span\"\n    // >\n    //   {/* {todayWorkData.isOpen\n    //     ? `${todayWorkData.from} - ${todayWorkData.to}`\n    //     : 'CLOSED TODAY'}\n\n    //         <Popover\n    \n    //     id=\"popover\"\n    //     sx={{\n    //       pointerEvents: 'none',\n    //       backgroundColor: 'transparent',\n    //     }}\n    //     open={isPopupOpened}\n    //     anchorEl={anchorElement}\n    //     anchorOrigin={{\n    //       vertical: 'bottom',\n    //       horizontal: 'left',\n    //     }}\n    //     transformOrigin={{\n    //       vertical: 'top',\n    //       horizontal: 'left',\n    //     }}\n    //     PaperProps={{\n    //       sx: {\n    //         backgroundColor: 'background.main',\n    //         borderWidth: '1px',\n    //         borderStyle: 'solid',\n    //         borderRadius: '8px',\n    //         borderColor: 'accent.main',\n    //         boxShadow: 53,\n    //       },\n    //     }}\n    //     onClose={handlePopoverClose}\n    //     disableRestoreFocus */}\n    //   >\n    //     <PopoverContainer component = \"span\">\n    //       {  .map(workDay => {\n    //         const isThisDay = !!currentDateString.startsWith(\n    //           workDay?.day?.toLowerCase()\n    //         );\n\n    //         return (\n    //           <Fragment key={workDay?.day}>\n    //             <PopoverItem component = \"span\" isThisDay={isThisDay}>{workDay?.day}</PopoverItem>\n    //             <PopoverItem component = \"span\" isThisDay={isThisDay}>\n    //               {workDay?.isOpen\n    //                 ? `${workDay?.from} - ${workDay?.to}`\n    //                 : 'CLOSED'}\n    //             </PopoverItem>\n    //           </Fragment>\n    //         );\n    //       })}\n    //     </PopoverContainer>\n    //   </Popover>\n    // </PopoverAnchor>)\n  \n\n}","\nimport {\n  FriendsItem,\n  ItemTitle,\n  FriendsItemBox,\n  FriendsImgBox,\n  FriendsImage,\n  ContactsList,\n  ContactsWrap,\n    ContactsLink,\n  NoInfo\n} from './OurFriendsItemStyled';\nimport { WorkTimePopUp } from \"../WorkTimePopUp/WorkTimePopUp\"\n\nexport const OurFriendsItem = ({ friendsData }) => {\n    const { title, url, addressUrl, imageUrl,\n        address, phone, email, workDays } =\n    friendsData;\n\n  return (\n    <FriendsItem>\n      <ItemTitle href={url} target=\"_blank\" rel=\"noreferrer noopener\">\n        {title}\n          </ItemTitle>\n          <FriendsItemBox>\n              <FriendsImgBox>\n                  <FriendsImage src={imageUrl || \"https://via.placeholder.com/120?text=OurFriend\"}\n                      alt=\"Friend logotype\"\n                      width=\"110\" /> \n              </FriendsImgBox> \n              <ContactsList>\n                  <div>\n                      <ContactsWrap component=\"span\">Time:</ContactsWrap>\n            {!workDays || workDays.length === 0 ? <NoInfo component=\"span\">No information</NoInfo> : \n              <WorkTimePopUp workDays={workDays} />} \n                  </div>\n                  <div>\n                      <ContactsWrap component=\"span\">Address:</ContactsWrap>\n                      {addressUrl && address ? (\n              <ContactsLink\n                href={addressUrl}\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n              >\n                {address}\n              </ContactsLink>\n                      ) : null}\n                      \n                      {!addressUrl && address ? address : null}\n                       {!addressUrl && !address ? (\n              <NoInfo  component= \"span\">No information</NoInfo>\n            ) : null}\n                  </div>\n\n                  <div>\n                      <ContactsWrap component=\"span\">Email:</ContactsWrap>\n                       {email ? (\n              <ContactsLink href={`mailto:${email}`}>{email}</ContactsLink>\n            ) : (\n              <NoInfo component= \"span\">No information</NoInfo>\n            )}\n                  </div>\n\n                  <div>\n                      <ContactsWrap component=\"span\">Phone:</ContactsWrap>\n                      {phone ? (\n              <ContactsLink href={`tel:${phone}`}>{phone}</ContactsLink>\n            ) : (\n              <NoInfo component= \"span\">No information</NoInfo>\n            )}\n                  </div> \n              </ContactsList>\n</FriendsItemBox>\n    </FriendsItem>\n  );\n};\n","import { FriendsList } from \"./OurFriendsListStyled\"\nimport { useGetFriendsQuery } from \"../../redux/ourFriendsApi\"\nimport {OurFriendsItem} from \"../OurFriendsItem/OurFriendsItem\"\nexport const OurFriendsList = () => {\n\n    const {  data, isError, isLoading } = useGetFriendsQuery();\n  console.log(isLoading)\n    return (\n\n        <>\n            {isLoading ? <div> Loading ... </div> : null}  \n            {isError ? <div>Ooops something went wrong</div> : null}\n            {!isLoading && !isError && data.length > 0 ?\n                <FriendsList>\n                    {data.map((friendsData) =>\n                    (<OurFriendsItem key={friendsData._id}\n                        friendsData={friendsData} />)\n                       )}\n            \n        </FriendsList> : null }\n            \n        </>\n    \n     )\n }","import styled from 'styled-components';\n\nexport const FirstHeader = styled('h1')`\n  font-weight: ${p => p.theme.fontWeights.bold};\n  text-align: ${p => p.theme.textAlign.center};\n  marginbottom: ${p => p.theme.space.m.s};\n  font-size: ${p => p.theme.fontSizes.l};\n  line-height: ${p => p.theme.lineHeights.s};\n  @media ${p => p.theme.media.tabletDesktop} {\n    font-size: ${p => p.theme.fontSizes.xxl};\n    marginbottom: ${p => p.theme.space.m.l};\n  }\n`;\n\nexport const MainHeader = styled('h1')`\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.xl};\n  line-height: ${p => p.theme.lineHeights.s};\n  @media ${p => p.theme.media.tabletDesktop} {\n    font-size: ${p => p.theme.fontSizes.xxxl};\n    line-height: ${p => p.theme.lineHeights.m};\n  }\n`;\n","import styled from 'styled-components';\n\nexport const FriendsWrap = styled.div`\n  padding-top: 42px;\n  padding-bottom: 100px;\n  @media (min-width: 768px) {\n    padding-top: 88px;\n  }\n  @media (min-width: 1280px) {\n    padding-top: 61px;\n  } ;\n`;\n","import { OurFriendsList } from \"../../components/OurFriensList/OurFriendsList\"\nimport { FirstHeader } from \"../../styles/Headers/Headers.styled\"\nimport { FriendsWrap} from \"./OurFriendsWrapStyled\"\nconst OurFriendsPage = () => {\n  return (\n   \n        <FriendsWrap>\n          <FirstHeader>Our Friends</FirstHeader>\n          <OurFriendsList />\n        </FriendsWrap>\n  );\n};\n\nexport default OurFriendsPage;\n"],"names":["FriendsList","styled","FriendsItem","p","theme","color","white","ItemTitle","accent","hoverBtn","FriendsItemBox","FriendsImgBox","FriendsImage","ContactsList","ContactsWrap","ContactsLink","NoInfo","greyText","PopoverAnchor","Box","cursor","PopoverContainer","display","gridTemplateColumns","gridRowGap","justifyItems","gridColumnGap","fontSize","lineHeight","padding","height","WorkTimePopUp","workDays","useState","anchorElement","setAnchorElement","handlePopoverClose","isPopupOpened","indexToFind","Date","getDay","neededObj","find","obj","index","undefined","onMouseEnter","currentTarget","onMouseLeave","length","isOpen","from","to","_id","Popover","id","sx","pointerEvents","backgroundColor","open","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","borderWidth","borderStyle","borderRadius","borderColor","boxShadow","onClose","disableRestoreFocus","map","workDay","Fragment","getDayName","OurFriendsItem","friendsData","title","url","addressUrl","imageUrl","address","phone","email","href","target","rel","src","alt","width","component","OurFriendsList","useGetFriendsQuery","data","isError","isLoading","console","log","FirstHeader","fontWeights","bold","textAlign","center","space","m","s","fontSizes","l","lineHeights","media","tabletDesktop","xxl","FriendsWrap","xl","xxxl"],"sourceRoot":""}