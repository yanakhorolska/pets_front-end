{"version":3,"file":"static/js/109.52def79a.chunk.js","mappings":"yOAwBA,EAlBkB,WAChB,IAAMA,GAAQC,EAAAA,EAAAA,KACRC,GAAYC,EAAAA,EAAAA,YAAWC,EAAAA,GAE7B,OACE,SAACC,EAAA,EAAD,CACEC,GAAI,CAAEC,GAAI,EAAGC,MAAO,gBACpBC,QAASP,EAAUQ,gBAFrB,SAI0B,SAAvBV,EAAMW,QAAQC,MACb,SAACC,EAAA,EAAD,KAEA,SAACC,EAAA,EAAD,KAIP,E,wCCnBYC,GAAqBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAe,gBAAGhB,EAAH,EAAGA,MAAH,MAAgB,CAC/DkB,MAAO,UACPV,MAAOR,EAAMW,QAAQQ,OAAOC,MAE5BC,aAAc,OACd,mBAAoB,CAClB,UAAW,CACTC,gBAAiBtB,EAAMW,QAAQY,OAAOC,OAG1C,uBAAwB,CACtBC,OAAQ,aAAezB,EAAMW,QAAQe,QAAQF,KAC7ChB,MACyB,SAAvBR,EAAMW,QAAQC,KACVZ,EAAMW,QAAQQ,OAAOC,MACrBpB,EAAMW,QAAQQ,OAAOQ,OAfkB,I,eCDpCC,EAAe,SAAAC,GAC1B,IAAQC,EAA4BD,EAA5BC,SAAaC,GAArB,OAAoCF,EAApC,GAKA,OAHKG,OAAOC,KAAKF,GAAYG,SAAS,aACpCH,EAAWI,QAAU,cAEhB,SAACpB,GAAD,kBAAwBgB,GAAxB,aAAqCD,IAC7C,E,UCkBD,EAvBa,WACX,OACE,iCAEE,SAAC,EAAD,KACA,mCACA,UAACM,EAAA,EAAD,CACE9B,GAAI,CACF+B,QAAS,OACTC,cAAe,SACfC,IAAK,OACLC,SAAU,SALd,WAQE,SAACZ,EAAD,CAAcpB,MAAM,UAApB,+BACA,SAACoB,EAAD,CAAcO,QAAQ,WAAW3B,MAAM,UAAvC,kCAMP,C","sources":["components/ColorMode/ColorMode.jsx","components/CustomComponents/Buttons/Buttons.styled.js","components/CustomComponents/Buttons/Buttons.jsx","pages/Home/Home.jsx"],"sourcesContent":["import { IconButton, useTheme } from '@mui/material';\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\nimport { useContext } from 'react';\nimport { ColorModeContext } from 'components/SharedLayout';\n\nconst ColorMode = () => {\n  const theme = useTheme();\n  const colorMode = useContext(ColorModeContext);\n\n  return (\n    <IconButton\n      sx={{ ml: 1, color: 'text.primary' }}\n      onClick={colorMode.toggleColorMode}\n    >\n      {theme.palette.mode === 'dark' ? (\n        <Brightness7Icon />\n      ) : (\n        <Brightness4Icon />\n      )}\n    </IconButton>\n  );\n};\n\nexport default ColorMode;\n","import { styled } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\n\nexport const StyledOrangeButton = styled(Button)(({ theme }) => ({\n  width: 'inherit',\n  color: theme.palette.colors.white,\n\n  borderRadius: '40px',\n  '&.MuiButton-root': {\n    '&:hover': {\n      backgroundColor: theme.palette.accent.main,\n    },\n  },\n  '&.MuiButton-outlined': {\n    border: '2px solid ' + theme.palette.primary.main,\n    color:\n      theme.palette.mode === 'dark'\n        ? theme.palette.colors.white\n        : theme.palette.colors.black,\n  },\n}));\n","import { StyledOrangeButton } from './Buttons.styled';\n\nexport const OrangeButton = props => {\n  const { children, ...otherProps } = props;\n\n  if (!Object.keys(otherProps).includes('variant')) {\n    otherProps.variant = 'contained';\n  }\n  return <StyledOrangeButton {...otherProps}>{children}</StyledOrangeButton>;\n};\n","import ColorMode from 'components/ColorMode';\nimport { OrangeButton } from 'components/CustomComponents/Buttons/Buttons';\nimport Box from '@mui/material/Box';\n\nconst Home = () => {\n  return (\n    <>\n      {/* Для примера */}\n      <ColorMode />\n      <div>home</div>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '10px',\n          maxWidth: '200px',\n        }}\n      >\n        <OrangeButton color=\"primary\">Contained button</OrangeButton>\n        <OrangeButton variant=\"outlined\" color=\"primary\">\n          Outlined button\n        </OrangeButton>\n      </Box>\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["theme","useTheme","colorMode","useContext","ColorModeContext","IconButton","sx","ml","color","onClick","toggleColorMode","palette","mode","Brightness7","Brightness4","StyledOrangeButton","styled","Button","width","colors","white","borderRadius","backgroundColor","accent","main","border","primary","black","OrangeButton","props","children","otherProps","Object","keys","includes","variant","Box","display","flexDirection","gap","maxWidth"],"sourceRoot":""}