{"version":3,"file":"static/js/149.cc453e9e.chunk.js","mappings":"iNA8CA,EA3CsB,WACpB,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BC,EAAAA,EAAAA,MAAnBC,GAAT,eAsBA,OACE,+BACE,kBAAMC,SAjBW,SAAAC,GACnBA,EAAMC,iBAEQ,KAAVN,EAIJG,EAAgB,CAAEI,OAAQP,IAHxBQ,MAAM,4BAIT,EASG,WACE,kBACEC,KAAK,UACLC,KAAK,OACLC,MAAOX,EACPY,YAAY,SACZC,SA5BY,SAAAR,GAClB,IAAMS,EAAWT,EAAMU,OAAOJ,MAAMK,cAAcC,OAClDhB,EAASa,EACV,KA2BK,mBAAQJ,KAAK,WACF,KAAVV,IACC,mBAAQU,KAAK,SAASQ,QAjBL,WACvBjB,EAAS,IACTE,EAAgB,CAAEI,OAAQ,IAC3B,QAmBF,E,oBCtCKY,EAAO,CACX,CAAEC,GAAI,sBAAuBC,KAAM,cACnC,CAAED,GAAI,oBAAqBC,KAAM,iBACjC,CAAED,GAAI,gBAAiBC,KAAM,SAGzBC,EAAW,CACf,CAAEF,GAAI,oBAAqBC,KAAM,gBACjC,CAAED,GAAI,eAAgBC,KAAM,WA8B9B,EA3B6B,WAC3B,IAAME,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,GAG7B,OACE,0BACE,0BACGN,EAAKO,KAAI,SAAAC,GAAE,OACV,yBACE,SAAC,KAAD,CAASP,GAAIO,EAAGP,GAAhB,UACE,0BAAOO,EAAGN,UAFLM,EAAGP,GADF,IAOXG,GACCD,EAASI,KAAI,SAAAC,GAAE,OACb,yBACE,SAAC,KAAD,CAASP,GAAIO,EAAGP,GAAhB,UACE,0BAAOO,EAAGN,UAFLM,EAAGP,GADC,QAUxB,E,6BCxCKQ,EAAgBC,EAAAA,GAAAA,IAAH,gPCGbC,EAAYC,SAASC,eAAe,cAsC1C,EApCoB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SACxBC,GAAgBC,EAAAA,EAAAA,cACpB,SAAAC,GACmB,WAAbA,EAAIC,MACNL,GAEH,GACD,CAACA,KAGHM,EAAAA,EAAAA,YAAU,WAER,OADAC,OAAOC,iBAAiB,UAAWN,GAC5B,WACLK,OAAOE,oBAAoB,UAAWP,EACvC,CACF,GAAE,CAACA,IAQJ,OAAOQ,EAAAA,EAAAA,eACL,SAACf,EAAD,CAAeV,QAPO,SAAAb,GAClBA,EAAMU,SAAWV,EAAMuC,eACzBX,GAEH,EAGC,UACE,8BAAGC,MAELJ,EAEH,E,UClCKe,EAAkBhB,EAAAA,GAAAA,OAAH,mPAGC,SAAAiB,GAAC,OAAIA,EAAEC,MAAMC,MAAMC,MAAlB,ICmCvB,EAnCwB,WACtB,IAAMC,GAAaC,EAAAA,EAAAA,KACnB,GAAsCpD,EAAAA,EAAAA,WAAS,GAA/C,eAAOqD,EAAP,KAAoBC,EAApB,KAEMC,GAAclB,EAAAA,EAAAA,cAAY,WAC9BiB,GAAe,SAAAE,GACbF,GAAgBE,EACjB,GACF,GAAE,IAEH,OACE,gCACGL,IACC,SAACL,EAAD,CACEnC,KAAK,SACLQ,QAAS,WACPmC,GAAe,EAChB,EAJH,qBASDD,IACC,SAAC,EAAD,CAAanB,QAASqB,EAAtB,UACE,gBACEE,MAAO,CAAEC,MAAO,QAASC,OAAQ,OAAQC,gBAAiB,SAD5D,mCAST,ECXD,EAlBoB,WAClB,OACE,+BACE,4BACE,oDACA,SAAC,EAAD,KAEA,4BACE,SAAC,EAAD,KACA,SAAC,EAAD,WAOT,C","sources":["components/NoticesSearch/NoticesSearch.jsx","components/NoticesCategoriesNav/NoticesCategoriesNav.jsx","components/ModalWindow/ModalWindow.styled.js","components/ModalWindow/ModalWindow.jsx","components/AddNoticeButton/AddNoticeButton.styled.js","components/AddNoticeButton/AddNoticeButton.jsx","pages/NoticesPage/NoticesPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst NoticesSearch = () => {\n  const [query, setQuery] = useState('');\n  const [, setSearchParams] = useSearchParams();\n\n  const handleInput = event => {\n    const newQuery = event.target.value.toLowerCase().trim();\n    setQuery(newQuery);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (query === '') {\n      alert(`Type something to search.`);\n      return;\n    }\n    setSearchParams({ search: query });\n  };\n\n  const handleResetQuery = () => {\n    setQuery('');\n    setSearchParams({ search: '' });\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          name=\"findpet\"\n          type=\"text\"\n          value={query}\n          placeholder=\"Search\"\n          onChange={handleInput}\n        />\n        <button type=\"submit\"></button>\n        {query !== '' && (\n          <button type=\"submit\" onClick={handleResetQuery}></button>\n        )}\n      </form>\n    </>\n  );\n};\n\nexport default NoticesSearch;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport { getIsLogged } from 'redux/selectors';\n\nconst link = [\n  { to: '/notices/lost-found', text: 'Lost/Found' },\n  { to: '/notices/for-free', text: 'In good hands' },\n  { to: '/notices/sell', text: 'Sell' },\n];\n\nconst linkAuth = [\n  { to: '/notices/favorite', text: 'Favorite ads' },\n  { to: '/notices/own', text: 'My ads' },\n];\n\nconst NoticesCategoriesNav = () => {\n  const isLogged = useSelector(getIsLogged);\n  //   const location = useLocation();\n\n  return (\n    <div>\n      <ul>\n        {link.map(el => (\n          <li key={el.to}>\n            <NavLink to={el.to}>\n              <span>{el.text}</span>\n            </NavLink>\n          </li>\n        ))}\n        {isLogged &&\n          linkAuth.map(el => (\n            <li key={el.to}>\n              <NavLink to={el.to}>\n                <span>{el.text}</span>\n              </NavLink>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default NoticesCategoriesNav;\n","import styled from 'styled-components';\n\nconst OverlayStyled = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(17, 17, 17, 0.6);\n  backdrop-filter: blur(10px);\n`;\n\nexport { OverlayStyled };\n","import React, { useCallback, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { OverlayStyled } from './ModalWindow.styled';\nimport PropTypes from 'prop-types';\n\nconst container = document.getElementById('modal-root');\n\nconst ModalWindow = ({ onClose, children }) => {\n  const onEscapePress = useCallback(\n    evt => {\n      if (evt.code === 'Escape') {\n        onClose();\n      }\n    },\n    [onClose]\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', onEscapePress);\n    return () => {\n      window.removeEventListener('keydown', onEscapePress);\n    };\n  }, [onEscapePress]);\n\n  const onBackdropClick = event => {\n    if (event.target === event.currentTarget) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <OverlayStyled onClick={onBackdropClick}>\n      <>{children}</>\n    </OverlayStyled>,\n    container\n  );\n};\n\nModalWindow.propTypes = {\n  onClose: PropTypes.func,\n  children: PropTypes.node,\n};\n\nexport default ModalWindow;\n","import styled from 'styled-components';\n\nconst AddNoticeStyled = styled.button`\n  width: 44px;\n  height: 44px;\n  background-color: ${p => p.theme.color.accent};\n  border: 0;\n  border-radius: 50%;\n\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    transform: scale(1.1);\n  }\n  transition: transform 250ms ease-out;\n`;\n\nexport { AddNoticeStyled };\n","import ModalWindow from 'components/ModalWindow';\nimport { useAuth } from 'hooks/useAuth';\nimport React, { useCallback, useState } from 'react';\nimport { AddNoticeStyled } from './AddNoticeButton.styled';\n\nconst AddNoticeButton = () => {\n  const isLoggedIn = useAuth();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const toggleModal = useCallback(() => {\n    setIsModalOpen(prevState => {\n      setIsModalOpen(!prevState);\n    });\n  }, []);\n\n  return (\n    <>\n      {isLoggedIn && (\n        <AddNoticeStyled\n          type=\"button\"\n          onClick={() => {\n            setIsModalOpen(true);\n          }}\n        >\n          Add pet\n        </AddNoticeStyled>\n      )}\n      {isModalOpen && (\n        <ModalWindow onClose={toggleModal}>\n          <div\n            style={{ width: '100px', height: '50px', backgroundColor: 'white' }}\n          >\n            MODAL WINDOW TEST\n          </div>\n        </ModalWindow>\n      )}\n    </>\n  );\n};\n\nexport default AddNoticeButton;\n","import React from 'react';\nimport NoticesSearch from 'components/NoticesSearch/NoticesSearch';\nimport NoticesCategoriesNav from 'components/NoticesCategoriesNav/NoticesCategoriesNav';\nimport AddNoticeButton from 'components/AddNoticeButton/AddNoticeButton';\n// import NoticesCategoriesNav from 'components/Notices/NoticesCategoriesNav';\n// import AddNoticeButton from 'components/Notices/AddNoticeButton';\n\n// import { Outlet } from 'react-router-dom/dist';\n\nconst NoticesPage = () => {\n  return (\n    <>\n      <div>\n        <h1>Find your favorite pet</h1>\n        <NoticesSearch />\n\n        <div>\n          <NoticesCategoriesNav />\n          <AddNoticeButton />\n        </div>\n\n        {/* <Outlet /> */}\n      </div>\n    </>\n  );\n};\n\nexport default NoticesPage;\n"],"names":["useState","query","setQuery","useSearchParams","setSearchParams","onSubmit","event","preventDefault","search","alert","name","type","value","placeholder","onChange","newQuery","target","toLowerCase","trim","onClick","link","to","text","linkAuth","isLogged","useSelector","getIsLogged","map","el","OverlayStyled","styled","container","document","getElementById","onClose","children","onEscapePress","useCallback","evt","code","useEffect","window","addEventListener","removeEventListener","createPortal","currentTarget","AddNoticeStyled","p","theme","color","accent","isLoggedIn","useAuth","isModalOpen","setIsModalOpen","toggleModal","prevState","style","width","height","backgroundColor"],"sourceRoot":""}