{"version":3,"file":"static/js/249.5c5ac872.chunk.js","mappings":"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","sources":["components/Box/Box.jsx","components/ModalAddsPet/AddPet.styled.js","components/ModalAddsPet/AddPet.jsx","components/UserAvatar/UserAvatar.styled.js","components/UserAvatar/UserAvatar.jsx","components/UserDataItem/UserDataItem.jsx","components/LogoutButton/LogoutButton.jsx","components/UserData/UserData.jsx","components/PetsList/PetsList.jsx","components/PetsData/PetsData.js","pages/UserPage/UserPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { color, background, space, border, typography, layout, flexbox, grid, shadow, position  } from 'styled-system'\n\nexport const Box = styled.div(\n  color,\n  background,\n  space,\n  border,\n  typography,\n  layout,\n  flexbox,\n  grid,\n  shadow,\n  position,\n);","import styled from 'styled-components';\n// import  from '../../styles/Buttons/icons';\n\nconst ModalAddPet = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 20px 20px 40px 20px;\n  background-color: ${p => p.theme.color.white};\n  border-radius: ${p => p.theme.radii.borderRadius.inputModal};\n  width: ${p => p.theme.sizes.width.modalS};\n  position: ${p => p.theme.position.a};\n  top: ${p => p.theme.sizes.top.half};\n  left: ${p => p.theme.sizes.left.half};\n  transform: ${p => p.theme.transform.modal};\n  transition: ${p => p.theme.transition.modal};\n  height: ${p => p.theme.sizes.height.auto};\n  @media ${p => p.theme.media.tablet} {\n    width: ${p => p.theme.sizes.width.modalM};\n    padding: 40px 80px;\n  }\n  @media ${p => p.theme.media.desktop} {\n    width: ${p => p.theme.sizes.width.modalM2};\n    padding: 40px 80px;\n  }\n  *:focus {\n    outline: none;\n  }\n`;\n\nconst FormTitle = styled.h3`\n  margin: 0 auto;\n  font-size: ${p => p.theme.fontSizes.xl};\n  font-weight: ${p => p.theme.fontWeights.semiBold};\n`;\n\nconst FormPageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 40px;\n  margin-bottom: 40px;\n  gap: 20px;\n`;\n\nconst InputLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-weight: ${p => p.theme.fontWeights.default};\n  font-size: ${p => p.theme.fontSizes.l};\n  line-height: 26px;\n  color: ${p => p.theme.color.black};\n`;\n\nconst InputStyled = styled.input`\n  padding: 10px 16px;\n  margin-top: 12px;\n  font-size: ${p => p.theme.fontSizes.s};\n  height: ${p => p.theme.fontSizes.xxl};\n  background: ${p => p.theme.color.background};\n  border: ${p => p.theme.borders.inputBorder};\n  border-radius: ${p => p.theme.radii.borderRadius.btn};\n`;\n\n// Image\n\nconst InputImageWrapper = styled.div`\nposition: relative;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nmargin: auto;\nwidth: 140px;\nheight: 140px;\nmargin-top: 12px;\nbackground: ${p => p.theme.color.background};\nborder-radius: 20px;\noverflow: hidden;\n& > img {\n  object-fit: contain;\n}\n`;\n\nconst InputImageLabel = styled(InputLabel)`\n  width: fit-content;\n`;\n\nconst InputImage = styled.input`\n  opacity: 0;\n  visibility: hidden;\n  position: absolute;\n`\n\nconst CommentInput = styled(InputStyled)`\n  height: 110px;\n  border-radius: 20px;\n  resize: none;\n`;\n\n// const StyledIconAdd = styled(Add).attrs(props => ({\n//   opacity: props.isvisible === 'true' ? 1 : 0,\n// }))`\n//   opacity: ${p => p.opacity};\n//   position: absolute;\n//   top: 50%;\n//   left: 50%;\n//   transform: translate(-50%, -50%);\n// `;\n\nconst FieldError = styled.p`\n  height: 20px;\n  font-size: 10px;\n  color: ${p => p.theme.color.accent};\n  margin-left: 15px;\n`;\n\nconst ButtonsWrapper = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n  gap: 20px;\n\n  @media ${p => p.theme.media.tabletDesktop} {\n    margin: 0 auto;\n    flex-direction: row;\n    width: 380px;\n  }\n`;\n\nexport {\n  ModalAddPet,\n  FormTitle,\n  FormPageWrapper,\n  InputLabel,\n  InputStyled,\n  InputImageWrapper,\n  InputImageLabel,\n  InputImage,\n  CommentInput,\n  FieldError,\n  ButtonsWrapper,\n};","import { useFormik } from 'formik';\nimport { useState } from 'react';\n\nimport * as Yup from 'yup';\n\nimport { ModalAddPet, FormTitle, FormPageWrapper, InputLabel, InputStyled, InputImageWrapper, InputImageLabel, InputImage, CommentInput, ButtonsWrapper, FieldError } from './AddPet.styled';\nimport { ModalButton, NextButton } from 'styles/Buttons'\n\nimport Icon from '../ModalAddNotice/svg';\nimport IconButtons from 'styles/Buttons/icons'\nimport Box from 'components/Box';\nimport { useTheme } from 'styled-components';\n\nconst validationSchema = [Yup.object().shape({\n  nickname:Yup.string().min(2).max(16).required(\"Name pet is required\"), \n  breed: Yup.string().min(2).max(16).required(\"Breed is required\"),\n  birthday: Yup.date()}),\n  Yup.object().shape({\n  avatar: Yup.mixed().required('Image pet is required'),\n  comment: Yup.string().min(8).max(120).required(\"Comments is required\"),\n})]\n\nexport const AddPet = ({ onClose }) => {\n\n  const theme = useTheme()\n\n  const [currentPage, setCurrentPage] = useState(0);\n\n  // const [addPets] = use(); //fetch\n\n  const onChangeAvatarImage = event => {\n    if (event.target?.files) {\n      formik.setFieldValue('avatar', event.target.files[0]);\n    }\n  };\n\n  const customOnSubmit = async (values, actions) => {\n     console.log(values)\n     //if currentPage === 2 \n    //  actions.setSubmitting(false);\n  }\n \n  const customHandleSubmit = (values, actions) => {\n    if (currentPage === 1) {\n      customOnSubmit(values, actions);\n    } else {\n      setCurrentPage(1);\n      actions.setTouched({});\n      actions.setSubmitting(false);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      nickname: '',\n      birthday: Date,\n      breed: '',\n      avatar: '',\n      comment: '',\n    },\n    validationSchema : validationSchema[currentPage],\n    onSubmit: customHandleSubmit,\n    //  onSubmit: async values => {\n    //    console.log(values);\n    //    //await addPet(values);\n    //  },\n    onChangeAvatarImage : async values => {\n      formik.setFieldValue('avatar', values.files[0]);\n    },\n  });\n\n  const {\n    nickname: nicknameError,\n    birthday: birthdayError,\n    breed: breedError,\n    avatar: avatarError,\n    comment: commentError,\n  } = formik.errors;\n\n\n  // const styleButtonClose = {\n  //   position:\"absolute\",\n  //   top:\"0\",\n  //   right:\"0\",\n  //   \"border-radius\": \"50%\",\n    \n  //   bgc: \"tomato\",\n  //   transform: \"translate(-50%, 50%)\",\n  // }\n\n  return (\n    <ModalAddPet onSubmit={formik.handleSubmit}>\n      <Box\n        position=\"absolute\"\n        top=\"0\"\n        right=\"0\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        width=\"40px\"\n        height=\"40px\"\n        borderRadius=\"50%\"\n        backgroundColor={theme.color.background}\n      >\n        <IconButtons.Close onClick={onClose} />\n      </Box>\n      <FormTitle>Add pet</FormTitle>\n      {(() => {\n        switch (currentPage) {\n          case 0:\n            return (\n              <FormPageWrapper>\n                <InputLabel>\n                  Name pet\n                  <InputStyled\n                    type=\"text\"\n                    name=\"nickname\"\n                    placeholder=\"Type name pet\"\n                    value={formik.values.nickname}\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                  />\n                </InputLabel>\n                {formik.touched.nickname && nicknameError ? (\n                  <FieldError>{nicknameError} </FieldError>\n                ) : null}\n                <InputLabel>\n                  Date of birth\n                  <InputStyled\n                    type=\"date\"\n                    name=\"birthday\"\n                    placeholder=\"Type date of birth\"\n                    value={formik.values.birthday}\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                  />\n                </InputLabel>\n                {formik.touched.birthday && birthdayError ? (\n                  <FieldError>{birthdayError} </FieldError>\n                ) : null}\n                <InputLabel>\n                  Breed\n                  <InputStyled\n                    type=\"text\"\n                    name=\"breed\"\n                    placeholder=\"Type breed\"\n                    value={formik.values.breed}\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                  />\n                </InputLabel>\n                {formik.touched.breed && breedError ? (\n                  <FieldError>{breedError} </FieldError>\n                ) : null}\n                <ButtonsWrapper>\n                  <ModalButton type=\"button\" onClick={onClose}>\n                    Cancel\n                  </ModalButton>\n                  <NextButton type=\"submit\">Next</NextButton>\n                </ButtonsWrapper>\n              </FormPageWrapper>\n            );\n          case 1:\n            return (\n              <>\n                <span mx=\"auto\">Add photo and some comments</span>\n                <FormPageWrapper>\n                  <InputImageWrapper sx={{ margin: 'auto' }}>\n                    <InputImageLabel>\n                      <InputImage\n                        type=\"file\"\n                        name=\"avatar\"\n                        accept=\"image/*\"\n                        onChange={onChangeAvatarImage}\n                        onBlur={formik.handleBlur}\n                      />\n                      {!formik.values?.avatar ? (\n                        <Icon.Add />\n                      ) : (\n                        <img\n                          src={URL.createObjectURL(formik.values.avatar)}\n                          alt=\"preview avatar\"\n                        />\n                      )}\n                    </InputImageLabel>\n                  </InputImageWrapper>\n                  {formik.touched.avatar && avatarError ? (\n                      <FieldError>{avatarError} </FieldError>\n                    ) : null}\n                  <InputLabel>\n                    Comments:\n                    <CommentInput\n                      as=\"textarea\"\n                      type=\"text\"\n                      name=\"comment\"\n                      placeholder=\"Type comment\"\n                      value={formik.values.comment}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                    ></CommentInput>\n                    {formik.touched.comment && commentError ? (\n                      <FieldError>{commentError} </FieldError>\n                    ) : null}\n                  </InputLabel>\n                  <ButtonsWrapper>\n                    <ModalButton\n                      type=\"button\"\n                      onClick={() => setCurrentPage(0)}\n                    >\n                      Back\n                    </ModalButton>\n                    <NextButton type=\"submit\">Done</NextButton>\n                  </ButtonsWrapper>\n                </FormPageWrapper>\n              </>\n            );\n          default:\n            return <></>;\n        }\n      })()}\n    </ModalAddPet>\n  );\n};\n","import styled from 'styled-components';\n\nexport const AvatarInput = styled(\"input\")`\nopacity: 0;\n  visibility: hidden;\n  position: absolute;\n`\nexport const AvatarLabel = styled(\"label\")`\ncolor: ${p => p.theme.color.navBarText};\nfont-size: 12px;\n\n  align-items: center;\n  margin-top: 12px;\n  margin-bottom: 36px;\n  padding: 0;\n  cursor: pointer;\n \n`\nexport const AvatarImage = styled(\"img\")`\nborder-radius: 50%;\n`\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getUserAvatarURL } from 'redux/selectors';\nimport { useUpdateUserAvatarMutation } from '../../redux/fetchUser';\nimport { useDispatch } from 'react-redux';\nimport { setAvatarURL } from '../../redux/authSlice';\nimport { AvatarInput, AvatarLabel, AvatarImage } from './UserAvatar.styled';\nimport Icon from '../../styles/Buttons/icons';\nimport { useState } from 'react';\n\nconst UserAvatar = () => {\n  const avatarURL = useSelector(getUserAvatarURL);\n  const dispatch = useDispatch();\n  const [avatar, setAvatar] = useState(avatarURL);\n  const [updateUserAvatar] = useUpdateUserAvatarMutation();\n\n  const handleAvatarChange = async event => {\n    try {\n      const file = event.target.files[0];\n      const { avatarURL } = await updateUserAvatar(file).unwrap();\n      dispatch(setAvatarURL(avatarURL));\n      setAvatar(avatarURL);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div>\n      <AvatarImage src={avatar} alt=\"User\" />\n\n      <AvatarLabel htmlFor=\"avatar-upload\">\n        <Icon.Camera /> Edit photo\n      </AvatarLabel>\n      <AvatarInput\n        name=\"avatar\"\n        id=\"avatar-upload\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={e => handleAvatarChange(e)}\n      />\n    </div>\n  );\n};\n\nexport default UserAvatar;","import React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useUpdateUserMutation } from '../../redux/fetchUser';\nimport { setUpdatedUser } from 'redux/authSlice';\n\nconst UserDataItem = ({ initialValues, text, name, placeholder }) => {\n  const [disabled, setDisabled] = useState(true);\n  const dispatch = useDispatch();\n  const [updateUser] = useUpdateUserMutation();\n  const [inputeData, setInputData] = useState('');\n\n  const handleSubmit = async values => {\n    console.log(values);\n    values[text] = inputeData;\n    try {\n      if (!disabled);\n      const user = await updateUser({ values }).unwrap();\n      dispatch(setUpdatedUser(user));\n      setInputData('');\n      setDisabled(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const changeInput = e => {\n    const data = e.currentTarget.value;\n    setInputData(data);\n    console.log(data);\n  };\n\n  return (\n    <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n      <Form>\n        <label>{name}: </label>\n        <Field\n          type=\"text\"\n          onChange={changeInput}\n          value={inputeData}\n          name={name}\n          placeholder={placeholder}\n          disabled={disabled}\n        />\n        <button type=\"button\" onClick={() => setDisabled(!disabled)}>\n          Edit\n        </button>\n        <button type=\"submit\" disabled={disabled}>\n          Submit\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default UserDataItem;","import { useLogOutMutation } from '../../redux/fetchUser'\nimport {setLogoutUser} from '../../redux/authSlice'\n\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getToken } from 'redux/selectors';\n\nfunction LogoutButton() {\n    const token = useSelector(getToken)\n    const [logout, { isLoading }] = useLogOutMutation(token);\n    const dispatch = useDispatch()\n\n  const handleLogoutClick = () => {\n      logout(token);\n      dispatch(setLogoutUser())\n      \n  };\n\n  return (\n    <button onClick={handleLogoutClick} disabled={isLoading}>\n      Logout\n    </button>\n  );\n}\n\nexport default LogoutButton","import React from 'react';\nimport UserAvatar from '../UserAvatar/UserAvatar';\nimport UserDataItem from 'components/UserDataItem/UserDataItem';\nimport { getUser } from 'redux/selectors';\nimport { useSelector } from 'react-redux';\nimport LogoutButton from '../LogoutButton/LogoutButton';\n\nconst UserData = () => {\n  const currentuser = useSelector(getUser);\n\n  return (\n    <div>\n      <p>My Information</p>\n      <UserAvatar />\n      <UserDataItem\n        initialValues={{ name: currentuser.name }}\n        name=\"name\"\n        text=\"name\"\n        placeholder={currentuser.name}\n      />\n      <UserDataItem\n        initialValues={{ email: currentuser.email }}\n        name=\"email\"\n        text=\"email\"\n        placeholder={currentuser.email}\n      />\n      <UserDataItem\n        initialValues={{ birthday: currentuser.birthday }}\n        name=\"birthday\"\n        text=\"birthday\"\n        placeholder={currentuser.birthday}\n      />\n      <UserDataItem\n        initialValues={{ city: currentuser.city }}\n        name=\"city\"\n        text=\"city\"\n        placeholder={currentuser.city}\n      />\n      <UserDataItem\n        initialValues={{ phone: currentuser.phone }}\n        name=\"phone\"\n        text=\"phone\"\n        placeholder={currentuser.phone}\n      />\n      <LogoutButton />\n    </div>\n  );\n};\n\nexport default UserData;","import React from 'react'\n\nconst PetsList = () => {\n  return (\n    <div>PetsLIst</div>\n  )\n}\n\nexport default PetsList","import React from 'react'\nimport PetsList from \"../PetsList/PetsList.jsx\"\nimport AddButton from 'components/AddButton';\nimport {AddPet} from '../ModalAddsPet/AddPet'\n\nconst PetsData = () => {\n  return (\n      <div>\n          <p>My Pets</p>\n          <AddButton component={AddPet} />\n          <PetsList />\n      </div>\n  )\n}\n\nexport default PetsData","import UserData from 'components/UserData/UserData';\nimport  PetsData from \"components/PetsData/PetsData\"\n\n\nconst UserPage = () => {\n\n    return (\n    <div>\n      <UserData />\n      <PetsData />\n    </div>\n  );\n};\n\nexport default UserPage;"],"names":["Box","styled","color","background","space","border","typography","layout","flexbox","grid","shadow","position","ModalAddPet","p","theme","white","radii","borderRadius","inputModal","sizes","width","modalS","a","top","half","left","transform","modal","transition","height","auto","media","tablet","modalM","desktop","modalM2","FormTitle","fontSizes","xl","fontWeights","semiBold","FormPageWrapper","InputLabel","default","l","black","InputStyled","s","xxl","borders","inputBorder","btn","InputImageWrapper","InputImageLabel","InputImage","CommentInput","FieldError","accent","ButtonsWrapper","tabletDesktop","validationSchema","Yup","shape","nickname","min","max","required","breed","birthday","avatar","comment","AddPet","onClose","useTheme","useState","currentPage","setCurrentPage","onChangeAvatarImage","event","target","files","formik","setFieldValue","customOnSubmit","values","actions","console","log","useFormik","initialValues","Date","onSubmit","setTouched","setSubmitting","errors","nicknameError","birthdayError","breedError","avatarError","commentError","handleSubmit","right","display","alignItems","justifyContent","backgroundColor","onClick","type","name","placeholder","value","onChange","handleChange","onBlur","handleBlur","touched","mx","sx","margin","accept","src","URL","createObjectURL","alt","as","AvatarInput","AvatarLabel","navBarText","AvatarImage","avatarURL","useSelector","getUserAvatarURL","dispatch","useDispatch","setAvatar","useUpdateUserAvatarMutation","updateUserAvatar","handleAvatarChange","file","unwrap","setAvatarURL","htmlFor","id","e","text","disabled","setDisabled","useUpdateUserMutation","updateUser","inputeData","setInputData","user","setUpdatedUser","data","currentTarget","token","getToken","useLogOutMutation","logout","isLoading","setLogoutUser","currentuser","getUser","email","city","phone","AddButton","component"],"sourceRoot":""}