{"version":3,"file":"static/js/491.3b5c9869.chunk.js","mappings":"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","sources":["components/AuthForm/AuthFormStyled.js","components/LoginForm/LoginForm.jsx","components/RegisterForm/RegisterForm.jsx","components/AuthForm/AuthForm.jsx","pages/LoginPage/LoginPage.styled.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const AuthContainer = styled.div`\n  width: 280px;\n  position: absolute;\n  top: 100px;\n  left: 50%;\n  transform: translateX(-50%);\n  text-align: center;\n\n  @media (min-width: 768px) {\n    width: 608px;\n    top: calc((100vh - 490px) / 2);\n    background-color: ${p => p.theme.color.white};\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n    border-radius: 40px;\n    padding: 60px 80px;\n  }\n\n  @media (min-width: 1280px) {\n    width: 618px;\n  }\n`;\n\nexport const AuthTitle = styled.h2`\n  font-family: 'Manrope', sans-serif;\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 1.38;\n\n  letter-spacing: 0.04em;\n  color: ${p => p.theme.color.text};\n  margin-bottom: 40px;\n\n  @media (min-width: 768px) {\n    font-family: 'Manrope', sans-serif;\n    font-weight: 500;\n    font-size: 36px;\n    line-height: 1.36;\n  }\n`;\n\nexport const AuthQuestion = styled.p`\n  display: inline-block;\n  font-size: 12px;\n  line-height: 1.33;\n  letter-spacing: 0.04em;\n  color: ${p => p.theme.color.greyTransp};\n`;\n\nexport const AuthLink = styled(Link)`\n  display: inline-block;\n  font-size: 12px;\n  line-height: 1.33;\n  letter-spacing: 0.04em;\n  text-decoration-line: underline;\n  color: ${p => p.theme.color.textRegister};\n`;\n\nexport const AuthError = styled.p`\n  height: 20px;\n  text-align: left;\n  font-size: 10px;\n  line-height: 12px;\n  color: ${p => p.theme.color.accent};\n  letter-spacing: 0.04em;\n  padding: 5px 15px;\n`;\n\nexport const AuthErrorLast = styled.p`\n  height: 20px;\n  text-align: left;\n  font-size: 10px;\n  line-height: 12px;\n  color: ${p => p.theme.color.accent};\n  letter-spacing: 0.04em;\n  padding: 5px 15px;\n  margin-bottom: 20px;\n`;\n\nexport const AuthInput = styled.input`\n  width: 100%;\n  font-size: 14px;\n  line-height: 1.36;\n  letter-spacing: 0.04em;\n  background-color: ${p => p.theme.color.background};\n  border: 1px solid ${p => p.theme.color.white};\n  border-radius: 40px;\n  outline: none;\n  padding: 9px 14px 10px;\n\n  @media (min-width: 768px) {\n    font-size: 18px;\n    line-height: 1.39;\n    padding: 13px 32px 12px;\n  }\n`;\n\nexport const AuthButton = styled.button`\n  display: block;\n  width: 100%;\n  font-family: 'Manrope', sans-serif;\n  font-size: 20px;\n  line-height: 1.35;\n  letter-spacing: 0.04em;\n\n  border-radius: 40px;\n  cursor: pointer;\n\n  padding-top: 10px;\n  padding-bottom: 10px;\n\n  background-color: ${props =>\n    props.accent ? props.theme.color.accent : props.theme.color.white};\n  color: ${props =>\n    props.accent ? props.theme.color.white : props.theme.color.black};\n  border: ${props =>\n    props.accent ? 'none' : `2px solid ${props.theme.color.accent}`};\n  margin-bottom: ${props => (props.last ? '40px' : '16px')};\n`;\n","import { useDispatch} from 'react-redux';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useLogInUserMutation } from 'redux/authApi';\nimport { setCredentials } from 'redux/authSlice';\nimport { AuthError, AuthErrorLast, AuthInput, AuthButton } from \"../AuthForm/AuthFormStyled\"\n\nconst LoginForm = () => {\n  const [loginUser] = useLogInUserMutation();\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    },\n\n    validationSchema: Yup.object({\n      email: Yup.string()\n        .email('Invalid email address')\n        .matches(\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, 'Invalid email address'\n      )\n        .min(10, 'Email must include more tnan 10 characters')\n        .max(63, 'Email must be less tnan 63 characters')\n        .required('This is a required field'),\n      password: Yup.string()\n        .min(7, 'Password must include more tnan 7 characters')\n        .max(32, 'Password must be less tnan 32 characters')\n        .required('This is a required field'),\n    }),\n  });\n\n  const { email, password } = formik.values;\n  const { email: emailError, password: passwordError } = formik.errors;\n\n  const onFormSubmit = async e => {\n    e.preventDefault();\n\n    if (email === '' || password === '') {\n      alert('Input all required fields');\n      return;\n    }\n    if (passwordError || emailError) {\n      alert('Input all fields in the necessary format');\n      return;\n    }\n\n    try {\n      const user = await loginUser({ email, password }).unwrap();\n      dispatch(setCredentials(user));\n    } catch (error) {\n      alert(error.data.message);\n    }\n  };\n\n  return (\n    <form onSubmit={onFormSubmit}>\n      <AuthInput\n        type=\"email\"\n        name=\"email\"\n        placeholder=\"Email\"\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={email}\n      />\n      <AuthError>\n        {formik.touched.email && emailError && emailError}\n        </AuthError>\n      <AuthInput\n        type=\"password\"\n        name=\"password\"\n        placeholder=\"Password\"\n        onChange={event => {\n          formik.setFieldValue('password', event.target.value.trim());\n        }}\n        onBlur={formik.handleBlur}\n        value={password}\n      />\n      <AuthErrorLast>\n        {formik.touched.password && passwordError && passwordError}\n      </AuthErrorLast>\n      <AuthButton type=\"submit\" accent={true} last={true}>\n        Login\n        </AuthButton>\n      </form>\n  );\n};\n\nexport default LoginForm;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useLogInUserMutation, useRegisterUserMutation } from 'redux/authApi';\nimport { setCredentials } from 'redux/authSlice';\nimport { AuthError, AuthErrorLast, AuthInput, AuthButton } from \"../AuthForm/AuthFormStyled\"\nconst RegisterForm = () => {\n  const [page, setPage] = useState(1);\n  const [registerUser] = useRegisterUserMutation();\n  const [loginUser] = useLogInUserMutation();\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      confirm_password: '',\n      name: '',\n      city: '',\n      phone: '',\n    },\n\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    },\n\n    validationSchema: Yup.object({\n      email: Yup.string()\n      .email('Invalid email address')\n        .matches(\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, 'Invalid email address'\n      )\n        .min(10, 'Email must include more tnan 10 characters')\n        .max(63, 'Email must be less tnan 63 characters')\n        .required('This is a required field'),\n      password: Yup.string()\n        .min(7, 'Password must include more tnan 7 characters')\n        .max(32, 'Password must be less tnan 32 characters')\n        .required('This is a required field'),\n      confirm_password: Yup.string()\n        .oneOf(\n          [Yup.ref('password'), null],\n          \"Password and confirm password don't match\"\n        )\n        .required('This is a required field'),\n      name: Yup.string()\n        .max(70, 'Name must be less tnan 70 characters')\n        .matches(/^[a-zA-Z]+$/, \"Only latin letters\")\n        .required('This is a required field'),\n      city: Yup.string()\n        .matches(\n          /[A-Za-z]+, [A-Za-z]+/,\n          'Please, enter the data in format \"region, city\" (only latin letters)'\n        )\n        .required('This is a required field'),\n      phone: Yup.string()\n        .matches(\n          /^\\+380\\d{9}/,\n          'Please, enter the phone number in the following way: +380XXXXXXXXX'\n        )\n        .length(13, 'Phone must include 13 characters')\n        .required('This is a required field'),\n    }),\n  });\n\n  let { email, password, confirm_password, name, city, phone } = formik.values;\n  const {\n    email: emailError,\n    password: passwordError,\n    confirm_password: confirmError,\n    name: nameError,\n    city: cityError,\n    phone: phoneError,\n  } = formik.errors;\n\n  const onPageChange = async () => {\n    if (page === 1) {\n      if (email === '' || password === '' || confirm_password === '') {\n        alert('Input all required fields');\n        return;\n      }\n      if (passwordError || confirmError || emailError) {\n        alert('Input all fields in the necessary format');\n        return;\n      }\n      setPage(2);\n      return;\n    }\n    setPage(1);\n  };\n\n  const onFormSubmit = async e => {\n    e.preventDefault();\n    if (name === '' || city === '' || phone === '') {\n      alert('Input all required fields');\n      return;\n    }\n    if (nameError || cityError || phoneError) {\n      alert('Input all fields in the necessary format');\n      return;\n    }\n\n    try {\n      await registerUser({\n        email,\n        password,\n        name,\n        city,\n        phone,\n      }).unwrap();\n      const user = await loginUser({ email, password }).unwrap();\n      dispatch(setCredentials(user));\n    } catch (error) {\n      alert(error.data.message);\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={onFormSubmit}>\n        {page === 1 && (\n          <>\n            <AuthInput\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={email}\n            />\n            <AuthError>\n              {formik.touched.email && emailError && emailError}\n            </AuthError>\n            <AuthInput\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              onChange={event => {\n                formik.setFieldValue('password', event.target.value.trim());\n              }}\n              onBlur={formik.handleBlur}\n              value={password}\n            />\n            <AuthError>\n              {formik.touched.password && passwordError && passwordError}\n            </AuthError>\n            <AuthInput\n              type=\"password\"\n              name=\"confirm_password\"\n              placeholder=\"Confirm Password\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={confirm_password}\n            />\n            <AuthErrorLast>\n              {formik.touched.confirm_password && confirmError && confirmError}\n            </AuthErrorLast>\n          </>\n        )}\n        {page === 2 && (\n          <>\n            <AuthInput\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Name\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={name}\n            />\n            <AuthError>\n              {formik.touched.name && nameError && nameError}\n            </AuthError>\n            <AuthInput\n              type=\"text\"\n              name=\"city\"\n              placeholder=\"City\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={city}\n            />\n            <AuthError>\n              {formik.touched.city && cityError && cityError}\n            </AuthError>\n            <AuthInput\n              type=\"tel\"\n              name=\"phone\"\n              placeholder=\"Mobile phone\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={phone}\n            />\n            <AuthErrorLast>\n              {formik.touched.phone && phoneError && phoneError}\n            </AuthErrorLast>\n            <AuthButton accent = {true} last={false}\n              type=\"submit\"\n            >\n              Register\n            </AuthButton>\n          </>\n        )}\n        <AuthButton accent={page === 1 ? true : false} last={true}\n          type=\"button\"\n          onClick={onPageChange}\n        >\n          {page === 1 ? 'Next' : 'Back'}\n        </AuthButton>\n      </form>\n    </>\n  );\n};\n\nexport default RegisterForm;\n","import { useLocation } from 'react-router-dom';\nimport LoginForm from 'components/LoginForm/LoginForm';\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\nimport {\n  AuthContainer,\n  AuthTitle,\n  AuthQuestion,\n  AuthLink,\n} from './AuthFormStyled';\n\nconst AuthForm = ({ title }) => {\n  const { pathname } = useLocation();\n\n  return (\n    <AuthContainer>\n      <AuthTitle>{title}</AuthTitle>\n      {pathname === '/login' && <LoginForm />}\n      {pathname === '/register' && <RegisterForm />}\n      <AuthQuestion>\n          {pathname === '/register'\n            ? 'Already have an account?'\n            : \"Don't have an account?\"}\n          &nbsp;\n      </AuthQuestion>\n      <AuthLink to={pathname === '/register' ? '/login' : '/register'}>\n          {pathname === '/register' ? 'Login' : 'Register'}\n      </AuthLink>\n    </AuthContainer>\n  );\n};\n\nexport default AuthForm;\n","import styled from 'styled-components';\n\nimport loginWavesMob1x from '../../images/bgs/login-waves-mob-1x.png';\nimport loginWavesMob2x from '../../images/bgs/login-waves-mob-2x.png';\nimport loginWavesTab1x from '../../images/bgs/login-waves-tab-1x.png';\nimport loginWavesTab2x from '../../images/bgs/login-waves-tab-2x.png';\nimport loginWavesDesk1x from '../../images/bgs/login-waves-desk-1x.png';\nimport loginWavesDesk2x from '../../images/bgs/login-waves-desk-2x.png';\n\nexport const AuthContainer = styled.div`\n  max-width: 100vw;\n  min-height: calc(100vh - 56px);\n  background-image: url(${loginWavesMob1x});\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: center bottom;\n\n  @media screen and (min-device-pixel-ratio: 2),\n    screen and (-moz-min-device-pixel-ratio: 2),\n    screen and (-o-min-device-pixel-ratio: 2/1),\n    screen and (-webkit-min-device-pixel-ratio: 2),\n    screen and (min-resolution: 192dpi),\n    screen and (min-resolution: 2dppx) {\n    background-image: url(${loginWavesMob2x});\n  }\n\n  @media (min-width: 768px) {\n    min-height: calc(100vh - 64px);\n    background-image: url(${loginWavesTab1x});\n\n    @media screen and (min-device-pixel-ratio: 2),\n      screen and (-moz-min-device-pixel-ratio: 2),\n      screen and (-o-min-device-pixel-ratio: 2/1),\n      screen and (-webkit-min-device-pixel-ratio: 2),\n      screen and (min-resolution: 192dpi),\n      screen and (min-resolution: 2dppx) {\n      background-image: url(${loginWavesTab2x});\n    }\n  }\n\n  @media (min-width: 1280px) {\n    min-height: calc(100vh - 70px);\n    background-image: url(${loginWavesDesk1x});\n\n    @media screen and (min-device-pixel-ratio: 2),\n      screen and (-moz-min-device-pixel-ratio: 2),\n      screen and (-o-min-device-pixel-ratio: 2/1),\n      screen and (-webkit-min-device-pixel-ratio: 2),\n      screen and (min-resolution: 192dpi),\n      screen and (min-resolution: 2dppx) {\n      background-image: url(${loginWavesDesk2x});\n    }\n  }\n`;\n"],"names":["AuthContainer","styled","p","theme","color","white","AuthTitle","text","AuthQuestion","greyTransp","AuthLink","Link","textRegister","AuthError","accent","AuthErrorLast","AuthInput","background","AuthButton","props","black","last","useLogInUserMutation","loginUser","dispatch","useDispatch","formik","useFormik","initialValues","email","password","onSubmit","values","alert","JSON","stringify","validationSchema","Yup","matches","min","max","required","errors","emailError","passwordError","onFormSubmit","e","preventDefault","unwrap","user","setCredentials","data","message","type","name","placeholder","onChange","handleChange","onBlur","handleBlur","value","touched","event","setFieldValue","target","trim","useState","page","setPage","useRegisterUserMutation","registerUser","confirm_password","city","phone","oneOf","length","confirmError","nameError","cityError","phoneError","onPageChange","onClick","title","pathname","useLocation","to","loginWavesMob1x","loginWavesMob2x","loginWavesTab1x","loginWavesTab2x","loginWavesDesk1x","loginWavesDesk2x"],"sourceRoot":""}