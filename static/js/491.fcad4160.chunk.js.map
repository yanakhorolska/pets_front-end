{"version":3,"file":"static/js/491.fcad4160.chunk.js","mappings":"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","sources":["components/AuthForm/AuthFormStyled.js","components/LoginForm/LoginForm.jsx","components/RegisterForm/RegisterForm.jsx","components/AuthForm/AuthForm.jsx","pages/LoginPage/LoginPage.styled.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const AuthContainer = styled.div`\n  width: 280px;\n  position: absolute;\n  top: 100px;\n  left: 50%;\n  transform: translateX(-50%);\n  text-align: center;\n\n  @media (min-width: 768px) {\n    width: 608px;\n    top: calc((100vh - 490px) / 2);\n    background-color: ${p => p.theme.color.cards};\n    box-shadow: ${p => p.theme.shadows.boxShadow};\n    border-radius: 40px;\n    padding: 60px 80px;\n  }\n\n  @media (min-width: 1280px) {\n    width: 618px;\n  }\n`;\n\nexport const AuthTitle = styled.h2`\n  font-family: 'Manrope', sans-serif;\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 1.38;\n\n  letter-spacing: 0.04em;\n  color: ${p => p.theme.color.text};\n  margin-bottom: 40px;\n\n  @media (min-width: 768px) {\n    font-family: 'Manrope', sans-serif;\n    font-weight: 500;\n    font-size: 36px;\n    line-height: 1.36;\n  }\n`;\n\nexport const AuthQuestion = styled.p`\n  display: inline-block;\n  font-size: 12px;\n  line-height: 1.33;\n  letter-spacing: 0.04em;\n  color: ${p => p.theme.color.greyTransp};\n`;\n\nexport const AuthLink = styled(Link)`\n  display: inline-block;\n  font-size: 12px;\n  line-height: 1.33;\n  letter-spacing: 0.04em;\n  text-decoration-line: underline;\n  color: ${p => p.theme.color.textRegister};\n  transition: transform .25s;\n  &:hover,\n  &:focus{   \n     transform: scale(1.05);\n  }\n`;\n\nexport const AuthError = styled.p`\n  height: 20px;\n  text-align: left;\n  font-size: 10px;\n  line-height: 12px;\n  color: ${p => p.theme.color.accent};\n  letter-spacing: 0.04em;\n  padding: 5px 15px;\n`;\n\nexport const AuthErrorLast = styled.p`\n  height: 20px;\n  text-align: left;\n  font-size: 10px;\n  line-height: 12px;\n  color: ${p => p.theme.color.accent};\n  letter-spacing: 0.04em;\n  padding: 5px 15px;\n  margin-bottom: 20px;\n`;\n\nexport const AuthInput = styled.input`\n  color: ${p => p.theme.color.text};\n  width: 100%;\n  font-size: 14px;\n  line-height: 1.36;\n  letter-spacing: 0.04em;\n  background-color: ${p => p.theme.color.background};\n  border: 1px solid ${p => p.theme.color.white};\n  border-radius: 40px;\n  outline: none;\n  padding: 9px 14px 10px;\n  transition: transform .25s;\n  &:hover,\n  &:focus{   \n     transform: scale(1.05);\n  }\n  &:placeholder-shown {\n    color: ${p => p.theme.color.greyTransp};\n  }\n\n  @media (min-width: 768px) {\n    font-size: 18px;\n    line-height: 1.39;\n    padding: 13px 32px 12px;\n  }\n`;\n\nexport const AuthButton = styled.button`\n  display: block;\n  width: 100%;\n  font-family: 'Manrope', sans-serif;\n  font-size: 20px;\n  line-height: 1.35;\n  letter-spacing: 0.04em;\n\n  border-radius: 40px;\n  cursor: pointer;\n\n  padding-top: 10px;\n  padding-bottom: 10px;\n\n  background-color: ${props =>\n    props.accent ? props.theme.color.accent : props.theme.color.white};\n  color: ${props =>\n    props.accent ? props.theme.color.white : props.theme.color.black};\n  border: ${props =>\n    props.accent ? 'none' : `2px solid ${props.theme.color.accent}`};\n  margin-bottom: ${props => (props.last ? '40px' : '16px')};\n  transition: transform .25s;\n  &:hover,\n  &:focus{   \n     transform: scale(1.05);\n  }\n`;\n","import { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useLogInUserMutation } from 'redux/fetchUser';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport {\n  AuthError,\n  AuthErrorLast,\n  AuthInput,\n  AuthButton,\n} from '../AuthForm/AuthFormStyled';\nimport { useTranslation } from 'react-i18next';\n\nconst LoginForm = () => {\n  const { t } = useTranslation();\n  const [loginUser] = useLogInUserMutation();\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    },\n\n    validationSchema: Yup.object({\n      email: Yup.string()\n        .email('Invalid email address')\n        .matches(\n          /^([a-zA-Z0-9])+([a-zA-Z0-9._-]+)@[a-zA-Z0-9]+([.-]?[a-zA-Z0-9]+)\\.[a-zA-Z]{2,}$/,\n          'Invalid email address'\n        )\n        .min(10, 'Email must include more tnan 10 characters')\n        .max(63, 'Email must be less tnan 63 characters')\n        .required('This is a required field'),\n      password: Yup.string()\n        .matches(/^[^\\s]+(^\\s.*)?$/, \"Password can't include whitespace\")\n        .min(7, 'Password must include more tnan 7 characters')\n        .max(32, 'Password must be less tnan 32 characters')\n        .required('This is a required field'),\n    }),\n  });\n\n  const { email, password } = formik.values;\n  const { email: emailError, password: passwordError } = formik.errors;\n\n  const onFormSubmit = async e => {\n    e.preventDefault();\n\n    if (email === '' || password === '') {\n      Notify.warning('Input all required fields');\n      return;\n    }\n    if (passwordError || emailError) {\n      Notify.warning('Input all fields in the necessary format');\n      return;\n    }\n\n    try {\n      await loginUser({ email, password }).unwrap();\n    } catch (error) {\n      Notify.failure(error.data.message);\n    }\n  };\n\n  return (\n    <form onSubmit={onFormSubmit}>\n      <AuthInput\n        type=\"email\"\n        name=\"email\"\n        placeholder={t('email')}\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={email}\n      />\n      <AuthError>{formik.touched.email && emailError && emailError}</AuthError>\n      <AuthInput\n        type=\"password\"\n        name=\"password\"\n        placeholder={t('password')}\n        onChange={event => {\n          formik.setFieldValue('password', event.target.value.trim());\n        }}\n        onBlur={formik.handleBlur}\n        value={password}\n      />\n      <AuthErrorLast>\n        {formik.touched.password && passwordError && passwordError}\n      </AuthErrorLast>\n      <AuthButton type=\"submit\" accent={true} last={true}>\n        {t('login')}\n      </AuthButton>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import { useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useLogInUserMutation, useRegistrationUserMutation } from 'redux/fetchUser';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport {\n  AuthError,\n  AuthErrorLast,\n  AuthInput,\n  AuthButton,\n} from '../AuthForm/AuthFormStyled';\nimport { useTranslation } from 'react-i18next';\n\nconst RegisterForm = () => {\n  const { t } = useTranslation();\n  const [page, setPage] = useState(1);\n  const [registerUser] = useRegistrationUserMutation();\n  const [loginUser] = useLogInUserMutation();\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      confirm_password: '',\n      name: '',\n      city: '',\n      phone: '',\n    },\n\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    },\n\n    validationSchema: Yup.object({\n      email: Yup.string()\n        .email('Invalid email address')\n        .matches(\n          /^([a-zA-Z0-9])+([a-zA-Z0-9._-]+)@[a-zA-Z0-9]+([.-]?[a-zA-Z0-9]+)\\.[a-zA-Z]{2,}$/,\n          'Invalid email address'\n        )\n        .min(10, 'Email must include more tnan 10 characters')\n        .max(63, 'Email must be less tnan 63 characters')\n        .required('This is a required field'),\n      password: Yup.string()\n        .matches(/^[^\\s]+(^\\s.*)?$/, \"Password can't include whitespace\")\n        .min(7, 'Password must include more tnan 7 characters')\n        .max(32, 'Password must be less tnan 32 characters')\n        .required('This is a required field'),\n      confirm_password: Yup.string()\n        .oneOf(\n          [Yup.ref('password'), null],\n          \"Password and confirm password don't match\"\n        )\n        .required('This is a required field'),\n      name: Yup.string()\n        .max(70, 'Name must be less tnan 70 characters')\n        .matches(/^[a-zA-Z]+$/, 'Only latin letters')\n        .required('This is a required field'),\n      city: Yup.string()\n        .matches(\n          /[A-Za-z]+, [A-Za-z]+/,\n          'Please, enter the data in format \"region, city\" (only latin letters)'\n        )\n        .required('This is a required field'),\n      phone: Yup.string()\n        .matches(\n          /^\\+380\\d{9}/,\n          'Please, enter the phone number in the following way: +380XXXXXXXXX'\n        )\n        .length(13, 'Phone must include 13 characters')\n        .required('This is a required field'),\n    }),\n  });\n\n  let { email, password, confirm_password, name, city, phone } = formik.values;\n  const {\n    email: emailError,\n    password: passwordError,\n    confirm_password: confirmError,\n    name: nameError,\n    city: cityError,\n    phone: phoneError,\n  } = formik.errors;\n\n  const onPageChange = async () => {\n    if (page === 1) {\n      if (email === '' || password === '' || confirm_password === '') {\n        Notify.warning('Input all required fields');\n        return;\n      }\n      if (passwordError || confirmError || emailError) {\n        Notify.warning('Input all fields in the necessary format');\n        return;\n      }\n      setPage(2);\n      return;\n    }\n    setPage(1);\n  };\n\n  const onFormSubmit = async e => {\n    e.preventDefault();\n    if (name === '' || city === '' || phone === '') {\n      Notify.warning('Input all required fields');\n      return;\n    }\n    if (nameError || cityError || phoneError) {\n      Notify.warning('Input all fields in the necessary format');\n      return;\n    }\n\n    try {\n      await registerUser({\n        email,\n        password,\n        name,\n        city,\n        phone,\n      }).unwrap();\n      await loginUser({ email, password }).unwrap();\n      \n    } catch (error) {\n      Notify.failure(error.data.message);\n    }\n  };\n\n  return (\n    <form onSubmit={onFormSubmit}>\n      {page === 1 && (\n        <>\n          <AuthInput\n            type=\"email\"\n            name=\"email\"\n            placeholder={t('email')}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={email}\n          />\n          <AuthError>\n            {formik.touched.email && emailError && emailError}\n          </AuthError>\n          <AuthInput\n            type=\"password\"\n            name=\"password\"\n            placeholder={t('password')}\n            onChange={event => {\n              formik.setFieldValue('password', event.target.value.trim());\n            }}\n            onBlur={formik.handleBlur}\n            value={password}\n          />\n          <AuthError>\n            {formik.touched.password && passwordError && passwordError}\n          </AuthError>\n          <AuthInput\n            type=\"password\"\n            name=\"confirm_password\"\n            placeholder={t('confirmPassword')}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={confirm_password}\n          />\n          <AuthErrorLast>\n            {formik.touched.confirm_password && confirmError && confirmError}\n          </AuthErrorLast>\n        </>\n      )}\n      {page === 2 && (\n        <>\n          <AuthInput\n            type=\"text\"\n            name=\"name\"\n            placeholder={t('name')}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={name}\n          />\n          <AuthError>{formik.touched.name && nameError && nameError}</AuthError>\n          <AuthInput\n            type=\"text\"\n            name=\"city\"\n            placeholder={t('city')}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={city}\n          />\n          <AuthError>{formik.touched.city && cityError && cityError}</AuthError>\n          <AuthInput\n            type=\"tel\"\n            name=\"phone\"\n            placeholder={t('mobilePhone')}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={phone}\n          />\n          <AuthErrorLast>\n            {formik.touched.phone && phoneError && phoneError}\n          </AuthErrorLast>\n          <AuthButton accent={true} last={false} type=\"submit\">\n            {t('register')}\n          </AuthButton>\n        </>\n      )}\n      <AuthButton\n        accent={page === 1 ? true : false}\n        last={true}\n        type=\"button\"\n        onClick={onPageChange}\n      >\n        {page === 1 ? t('next') : t('back')}\n      </AuthButton>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n","import { useLocation } from 'react-router-dom';\nimport LoginForm from 'components/LoginForm/LoginForm';\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\nimport {\n  AuthContainer,\n  AuthTitle,\n  AuthQuestion,\n  AuthLink,\n} from './AuthFormStyled';\nimport { useTranslation } from 'react-i18next';\n\nconst AuthForm = ({ title }) => {\n  const { pathname } = useLocation();\n  const { t } = useTranslation();\n  return (\n    <AuthContainer>\n      <AuthTitle>{title}</AuthTitle>\n      {pathname === '/login' && <LoginForm />}\n      {pathname === '/register' && <RegisterForm />}\n      <AuthQuestion>\n        {pathname === '/register' ? t('alreadyQuestion') : t('dontQuestion')}\n        &nbsp;\n      </AuthQuestion>\n      <AuthLink to={pathname === '/register' ? '/login' : '/register'}>\n        {pathname === '/register' ? t('login') : t('register')}\n      </AuthLink>\n    </AuthContainer>\n  );\n};\n\nexport default AuthForm;\n","import styled from 'styled-components';\n\nimport loginWavesMob1x from '../../images/bgs/login-waves-mob-1x.png';\nimport loginWavesMob2x from '../../images/bgs/login-waves-mob-2x.png';\nimport loginWavesTab1x from '../../images/bgs/login-waves-tab-1x.png';\nimport loginWavesTab2x from '../../images/bgs/login-waves-tab-2x.png';\nimport loginWavesDesk1x from '../../images/bgs/login-waves-desk-1x.png';\nimport loginWavesDesk2x from '../../images/bgs/login-waves-desk-2x.png';\n\nexport const AuthContainer = styled.div`\n  max-width: 100vw;\n  min-height: calc(100vh - 56px);\n  background-image: url(${loginWavesMob1x});\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: center bottom;\n\n  @media screen and (min-device-pixel-ratio: 2),\n    screen and (-moz-min-device-pixel-ratio: 2),\n    screen and (-o-min-device-pixel-ratio: 2/1),\n    screen and (-webkit-min-device-pixel-ratio: 2),\n    screen and (min-resolution: 192dpi),\n    screen and (min-resolution: 2dppx) {\n    background-image: url(${loginWavesMob2x});\n  }\n\n  @media (min-width: 768px) {\n    min-height: calc(100vh - 64px);\n    background-image: url(${loginWavesTab1x});\n\n    @media screen and (min-device-pixel-ratio: 2),\n      screen and (-moz-min-device-pixel-ratio: 2),\n      screen and (-o-min-device-pixel-ratio: 2/1),\n      screen and (-webkit-min-device-pixel-ratio: 2),\n      screen and (min-resolution: 192dpi),\n      screen and (min-resolution: 2dppx) {\n      background-image: url(${loginWavesTab2x});\n    }\n  }\n\n  @media (min-width: 1280px) {\n    min-height: calc(100vh - 70px);\n    background-image: url(${loginWavesDesk1x});\n\n    @media screen and (min-device-pixel-ratio: 2),\n      screen and (-moz-min-device-pixel-ratio: 2),\n      screen and (-o-min-device-pixel-ratio: 2/1),\n      screen and (-webkit-min-device-pixel-ratio: 2),\n      screen and (min-resolution: 192dpi),\n      screen and (min-resolution: 2dppx) {\n      background-image: url(${loginWavesDesk2x});\n    }\n  }\n`;\n"],"names":["AuthContainer","styled","p","theme","color","cards","shadows","boxShadow","AuthTitle","text","AuthQuestion","greyTransp","AuthLink","Link","textRegister","AuthError","accent","AuthErrorLast","AuthInput","background","white","AuthButton","props","black","last","t","useTranslation","useLogInUserMutation","loginUser","formik","useFormik","initialValues","email","password","onSubmit","values","alert","JSON","stringify","validationSchema","Yup","matches","min","max","required","errors","emailError","passwordError","onFormSubmit","e","preventDefault","Notify","unwrap","data","message","type","name","placeholder","onChange","handleChange","onBlur","handleBlur","value","touched","event","setFieldValue","target","trim","useState","page","setPage","useRegistrationUserMutation","registerUser","confirm_password","city","phone","oneOf","length","confirmError","nameError","cityError","phoneError","onPageChange","onClick","title","pathname","useLocation","to","loginWavesMob1x","loginWavesMob2x","loginWavesTab1x","loginWavesTab2x","loginWavesDesk1x","loginWavesDesk2x"],"sourceRoot":""}